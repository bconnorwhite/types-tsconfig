/* eslint-disable max-lines */
import { z } from "zod";

const jsxSchema = z.union([
  z.literal("preserve"),
  z.literal("react"),
  z.literal("react-jsx"),
  z.literal("react-jsxdev"),
  z.literal("react-native")
]);

const moduleSchema = z.union([
  z.literal("CommonJS"),
  z.literal("AMD"),
  z.literal("System"),
  z.literal("UMD"),
  z.literal("ES6"),
  z.literal("ES2015"),
  z.literal("ES2020"),
  z.literal("ES2022"),
  z.literal("ESNext"),
  z.literal("Node16"),
  z.literal("NodeNext"),
  z.literal("None"),
  z.literal("commonjs"),
  z.literal("amd"),
  z.literal("system"),
  z.literal("umd"),
  z.literal("es6"),
  z.literal("es2015"),
  z.literal("es2020"),
  z.literal("es2022"),
  z.literal("esnext"),
  z.literal("node16"),
  z.literal("nodenext"),
  z.literal("none")
]);

const newLineSchema = z.union([
  z.literal("CRLF"),
  z.literal("LF"),
  z.literal("crlf"),
  z.literal("lf")
]);

const moduleResolutionSchema = z.union([
  z.literal("classic"),
  z.literal("node"),
  z.literal("node16"),
  z.literal("nodenext"),
  z.literal("Classic"),
  z.literal("Node"),
  z.literal("Node16"),
  z.literal("NodeNext")
]);

const targetSchema = z.union([
  z.literal("ES3"),
  z.literal("ES5"),
  z.literal("ES6"),
  z.literal("ES2015"),
  z.literal("ES2016"),
  z.literal("ES2017"),
  z.literal("ES2018"),
  z.literal("ES2019"),
  z.literal("ES2020"),
  z.literal("ES2021"),
  z.literal("ES2022"),
  z.literal("ESNext"),
  z.literal("es3"),
  z.literal("es5"),
  z.literal("es6"),
  z.literal("es2015"),
  z.literal("es2016"),
  z.literal("es2017"),
  z.literal("es2018"),
  z.literal("es2019"),
  z.literal("es2020"),
  z.literal("es2021"),
  z.literal("es2022"),
  z.literal("esnext")
]);

const libSchema = z.union([
  z.literal("ES5"),
  z.literal("ES6"),
  z.literal("ES7"),
  z.literal("ES2015"),
  z.literal("ES2015.Collection"),
  z.literal("ES2015.Core"),
  z.literal("ES2015.Generator"),
  z.literal("ES2015.Iterable"),
  z.literal("ES2015.Promise"),
  z.literal("ES2015.Proxy"),
  z.literal("ES2015.Reflect"),
  z.literal("ES2015.Symbol.WellKnown"),
  z.literal("ES2015.Symbol"),
  z.literal("ES2016"),
  z.literal("ES2016.Array.Include"),
  z.literal("ES2017"),
  z.literal("ES2017.Intl"),
  z.literal("ES2017.Object"),
  z.literal("ES2017.SharedMemory"),
  z.literal("ES2017.String"),
  z.literal("ES2017.TypedArrays"),
  z.literal("ES2018"),
  z.literal("ES2018.AsyncGenerator"),
  z.literal("ES2018.AsyncIterable"),
  z.literal("ES2018.Intl"),
  z.literal("ES2018.Promise"),
  z.literal("ES2018.Regexp"),
  z.literal("ES2019"),
  z.literal("ES2019.Array"),
  z.literal("ES2019.Object"),
  z.literal("ES2019.String"),
  z.literal("ES2019.Symbol"),
  z.literal("ES2020"),
  z.literal("ES2020.BigInt"),
  z.literal("ES2020.Promise"),
  z.literal("ES2020.String"),
  z.literal("ES2020.Symbol.WellKnown"),
  z.literal("ES2020.SharedMemory"),
  z.literal("ES2020.Intl"),
  z.literal("ES2021"),
  z.literal("ES2021.Promise"),
  z.literal("ES2021.String"),
  z.literal("ES2021.WeakRef"),
  z.literal("ESNext"),
  z.literal("ESNext.Array"),
  z.literal("ESNext.AsyncIterable"),
  z.literal("ESNext.BigInt"),
  z.literal("ESNext.Intl"),
  z.literal("ESNext.Promise"),
  z.literal("ESNext.String"),
  z.literal("ESNext.Symbol"),
  z.literal("ESNext.WeakRef"),
  z.literal("DOM"),
  z.literal("DOM.Iterable"),
  z.literal("ScriptHost"),
  z.literal("WebWorker"),
  z.literal("WebWorker.ImportScripts"),
  z.literal("WebWorker.Iterable"),
  z.literal("es5"),
  z.literal("es6"),
  z.literal("es7"),
  z.literal("es2015"),
  z.literal("es2015.collection"),
  z.literal("es2015.core"),
  z.literal("es2015.generator"),
  z.literal("es2015.iterable"),
  z.literal("es2015.promise"),
  z.literal("es2015.proxy"),
  z.literal("es2015.reflect"),
  z.literal("es2015.symbol.wellknown"),
  z.literal("es2015.symbol"),
  z.literal("es2016"),
  z.literal("es2016.array.include"),
  z.literal("es2017"),
  z.literal("es2017.intl"),
  z.literal("es2017.object"),
  z.literal("es2017.sharedmemory"),
  z.literal("es2017.string"),
  z.literal("es2017.typedarrays"),
  z.literal("es2018"),
  z.literal("es2018.asyncgenerator"),
  z.literal("es2018.asynciterable"),
  z.literal("es2018.intl"),
  z.literal("es2018.promise"),
  z.literal("es2018.regexp"),
  z.literal("es2019"),
  z.literal("es2019.array"),
  z.literal("es2019.object"),
  z.literal("es2019.string"),
  z.literal("es2019.symbol"),
  z.literal("es2020"),
  z.literal("es2020.bigint"),
  z.literal("es2020.promise"),
  z.literal("es2020.string"),
  z.literal("es2020.symbol.wellknown"),
  z.literal("es2020.sharedmemory"),
  z.literal("es2020.intl"),
  z.literal("es2021"),
  z.literal("es2021.promise"),
  z.literal("es2021.string"),
  z.literal("es2021.weakref"),
  z.literal("esnext"),
  z.literal("esnext.array"),
  z.literal("esnext.asynciterable"),
  z.literal("esnext.bigint"),
  z.literal("esnext.intl"),
  z.literal("esnext.promise"),
  z.literal("esnext.string"),
  z.literal("esnext.symbol"),
  z.literal("esnext.weakref"),
  z.literal("dom"),
  z.literal("dom.iterable"),
  z.literal("scripthost"),
  z.literal("webworker"),
  z.literal("webworker.importscripts"),
  z.literal("webworker.iterable")
]);

const fallbackPollingSchema = z.union([
  z.literal("fixedPollingInterval"),
  z.literal("priorityPollingInterval"),
  z.literal("dynamicPriorityPolling"),
  z.literal("fixedInterval"),
  z.literal("priorityInterval"),
  z.literal("dynamicPriority"),
  z.literal("fixedChunkSize")
]);

const watchDirectorySchema = z.union([
  z.literal("useFsEvents"),
  z.literal("fixedPollingInterval"),
  z.literal("dynamicPriorityPolling"),
  z.literal("fixedChunkSizePolling")
]);

const watchFileSchema = z.union([
  z.literal("fixedPollingInterval"),
  z.literal("priorityPollingInterval"),
  z.literal("dynamicPriorityPolling"),
  z.literal("useFsEvents"),
  z.literal("useFsEventsOnParentDirectory"),
  z.literal("fixedChunkSizePolling")
]);

const pluginSchema = z.record(z.unknown()).and(
  z.object({
    name: z.string().optional()
  })
);

const importsNotUsedAsValuesSchema = z.union([
  z.literal("remove"),
  z.literal("preserve"),
  z.literal("error")
]);

const moduleDetectionSchema = z.union([
  z.literal("auto"),
  z.literal("legacy"),
  z.literal("force")
]);

export const compilerOptionsSchema = z.object({
  charset: z.string().optional(),
  composite: z.boolean().optional(),
  declaration: z.boolean().optional(),
  declarationDir: z.string().optional(),
  diagnostics: z.boolean().optional(),
  disableReferencedProjectLoad: z.boolean().optional(),
  noPropertyAccessFromIndexSignature: z.boolean().optional(),
  emitBOM: z.boolean().optional(),
  emitDeclarationOnly: z.boolean().optional(),
  exactOptionalPropertyTypes: z.boolean().optional(),
  incremental: z.boolean().optional(),
  tsBuildInfoFile: z.string().optional(),
  inlineSourceMap: z.boolean().optional(),
  inlineSources: z.boolean().optional(),
  jsx: jsxSchema.optional(),
  reactNamespace: z.string().optional(),
  jsxFactory: z.string().optional(),
  jsxFragmentFactory: z.string().optional(),
  jsxImportSource: z.string().optional(),
  listFiles: z.boolean().optional(),
  mapRoot: z.string().optional(),
  module: moduleSchema.optional(),
  moduleResolution: moduleResolutionSchema.optional(),
  newLine: newLineSchema.optional(),
  noEmit: z.boolean().optional(),
  noEmitHelpers: z.boolean().optional(),
  noEmitOnError: z.boolean().optional(),
  noImplicitAny: z.boolean().optional(),
  noImplicitThis: z.boolean().optional(),
  noUnusedLocals: z.boolean().optional(),
  noUnusedParameters: z.boolean().optional(),
  noLib: z.boolean().optional(),
  noResolve: z.boolean().optional(),
  noStrictGenericChecks: z.boolean().optional(),
  skipDefaultLibCheck: z.boolean().optional(),
  skipLibCheck: z.boolean().optional(),
  outFile: z.string().optional(),
  outDir: z.string().optional(),
  preserveConstEnums: z.boolean().optional(),
  preserveSymlinks: z.boolean().optional(),
  preserveWatchOutput: z.boolean().optional(),
  pretty: z.boolean().optional(),
  removeComments: z.boolean().optional(),
  rootDir: z.string().optional(),
  isolatedModules: z.boolean().optional(),
  sourceMap: z.boolean().optional(),
  sourceRoot: z.string().optional(),
  suppressExcessPropertyErrors: z.boolean().optional(),
  suppressImplicitAnyIndexErrors: z.boolean().optional(),
  stripInternal: z.boolean().optional(),
  target: targetSchema.optional(),
  useUnknownInCatchVariables: z.boolean().optional(),
  watch: z.boolean().optional(),
  fallbackPolling: fallbackPollingSchema.optional(),
  watchDirectory: watchDirectorySchema.optional(),
  watchFile: watchFileSchema.optional(),
  experimentalDecorators: z.boolean().optional(),
  emitDecoratorMetadata: z.boolean().optional(),
  allowUnusedLabels: z.boolean().optional(),
  noImplicitReturns: z.boolean().optional(),
  noUncheckedIndexedAccess: z.boolean().optional(),
  noFallthroughCasesInSwitch: z.boolean().optional(),
  noImplicitOverride: z.boolean().optional(),
  allowUnreachableCode: z.boolean().optional(),
  forceConsistentCasingInFileNames: z.boolean().optional(),
  generateCpuProfile: z.string().optional(),
  baseUrl: z.string().optional(),
  paths: z.record(z.array(z.string())).optional(),
  plugins: z.array(pluginSchema).optional(),
  rootDirs: z.array(z.string()).optional(),
  typeRoots: z.array(z.string()).optional(),
  types: z.array(z.string()).optional(),
  traceResolution: z.boolean().optional(),
  allowJs: z.boolean().optional(),
  noErrorTruncation: z.boolean().optional(),
  allowSyntheticDefaultImports: z.boolean().optional(),
  noImplicitUseStrict: z.boolean().optional(),
  listEmittedFiles: z.boolean().optional(),
  disableSizeLimit: z.boolean().optional(),
  lib: z.array(libSchema).optional(),
  strictNullChecks: z.boolean().optional(),
  maxNodeModuleJsDepth: z.number().optional(),
  importHelpers: z.boolean().optional(),
  importsNotUsedAsValues: importsNotUsedAsValuesSchema.optional(),
  alwaysStrict: z.boolean().optional(),
  strict: z.boolean().optional(),
  strictBindCallApply: z.boolean().optional(),
  downlevelIteration: z.boolean().optional(),
  checkJs: z.boolean().optional(),
  strictFunctionTypes: z.boolean().optional(),
  strictPropertyInitialization: z.boolean().optional(),
  esModuleInterop: z.boolean().optional(),
  allowUmdGlobalAccess: z.boolean().optional(),
  keyofStringsOnly: z.boolean().optional(),
  useDefineForClassFields: z.boolean().optional(),
  declarationMap: z.boolean().optional(),
  resolveJsonModule: z.boolean().optional(),
  assumeChangesOnlyAffectDirectDependencies: z.boolean().optional(),
  extendedDiagnostics: z.boolean().optional(),
  listFilesOnly: z.boolean().optional(),
  disableSourceOfProjectReferenceRedirect: z.boolean().optional(),
  disableSolutionSearching: z.boolean().optional(),
  explainFiles: z.boolean().optional(),
  preserveValueImports: z.boolean().optional(),
  moduleSuffixes: z.array(z.string()).optional(),
  moduleDetection: moduleDetectionSchema.optional()
});
